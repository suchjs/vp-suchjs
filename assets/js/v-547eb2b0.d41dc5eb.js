"use strict";(self.webpackChunksuchjs_com=self.webpackChunksuchjs_com||[]).push([[837],{9623:(n,a,s)=>{s.r(a),s.d(a,{data:()=>e});const e={key:"v-547eb2b0",path:"/extTypes.html",title:"扩展类型",lang:"zh-CN",frontmatter:{lang:"zh-CN",title:"扩展类型",description:"suchjs内置扩展类型"},excerpt:"",headers:[{level:2,title:"布尔类型",slug:"布尔类型",children:[{level:3,title:":boolean",slug:"boolean",children:[]},{level:3,title:":bool",slug:"bool",children:[]}]},{level:2,title:"数字类型",slug:"数字类型",children:[{level:3,title:":integer",slug:"integer",children:[]},{level:3,title:":int",slug:"int",children:[]},{level:3,title:":percent",slug:"percent",children:[]}]},{level:2,title:"字符串类型",slug:"字符串类型",children:[{level:3,title:":alphaNumericDash",slug:"alphanumericdash",children:[]},{level:3,title:":alphaNumeric",slug:"alphanumeric",children:[]},{level:3,title:":alpha",slug:"alpha",children:[]},{level:3,title:":numeric",slug:"numeric",children:[]},{level:3,title:":uppercase",slug:"uppercase",children:[]},{level:3,title:":lowercase",slug:"lowercase",children:[]}]},{level:2,title:"网络类型",slug:"网络类型",children:[{level:3,title:":url",slug:"url",children:[]},{level:3,title:":email",slug:"email",children:[]},{level:3,title:":protocol",slug:"protocol",children:[]},{level:3,title:":tld",slug:"tld",children:[]},{level:3,title:":domain",slug:"domain",children:[]},{level:3,title:":ipv4",slug:"ipv4",children:[]},{level:3,title:":ipv6",slug:"ipv6",children:[]},{level:3,title:":ip",slug:"ip",children:[]}]},{level:2,title:"颜色类型",slug:"颜色类型",children:[{level:3,title:":color$hex",slug:"color-hex",children:[]},{level:3,title:":color$rgb",slug:"color-rgb",children:[]},{level:3,title:":color$rgba",slug:"color-rgba",children:[]},{level:3,title:":color$hsl",slug:"color-hsl",children:[]},{level:3,title:":color$hsla",slug:"color-hsla",children:[]}]}],filePathRelative:"extTypes.md",git:{contributors:[]}}},7441:(n,a,s)=>{s.r(a),s.d(a,{default:()=>za});var e=s(6252);const t=(0,e.Wm)("h2",{id:"布尔类型",tabindex:"-1"},[(0,e.Wm)("a",{class:"header-anchor",href:"#布尔类型","aria-hidden":"true"},"#"),(0,e.Uk)(" 布尔类型")],-1),c={id:"boolean",tabindex:"-1"},p=(0,e.Wm)("a",{class:"header-anchor",href:"#boolean","aria-hidden":"true"},"#",-1),o=(0,e.Uk)(),l=(0,e.Wm)("code",null,":boolean",-1),u=(0,e.Uk)(),i=(0,e.uE)('<p>返回一个布尔值，true 或者 false。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Such<span class="token punctuation">.</span><span class="token function">as</span><span class="token punctuation">(</span><span class="token string">&quot;:boolean&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true|false</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',2),r={id:"bool",tabindex:"-1"},d=(0,e.Wm)("a",{class:"header-anchor",href:"#bool","aria-hidden":"true"},"#",-1),m=(0,e.Uk)(),k=(0,e.Wm)("code",null,":bool",-1),h=(0,e.Uk)(),g=(0,e.uE)('<p><code>:bool</code> 类型是 <code>:boolean</code> 的简写别名。别名通过 Suchjs 提供的 api <code>Such.alias</code> 来定义，比如<code>Such.alias(&quot;bool&quot;, &quot;boolean&quot;)</code>。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Such<span class="token punctuation">.</span><span class="token function">as</span><span class="token punctuation">(</span><span class="token string">&quot;:bool&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true|false</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="数字类型" tabindex="-1"><a class="header-anchor" href="#数字类型" aria-hidden="true">#</a> 数字类型</h2>',3),b={id:"integer",tabindex:"-1"},v=(0,e.Wm)("a",{class:"header-anchor",href:"#integer","aria-hidden":"true"},"#",-1),q=(0,e.Uk)(),x=(0,e.Wm)("code",null,":integer",-1),W=(0,e.Uk)(),f=(0,e.uE)('<p>返回一个整数值。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Such<span class="token punctuation">.</span><span class="token function">as</span><span class="token punctuation">(</span><span class="token string">&quot;:integer:[100,200]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 125</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><code>:integer</code> 类型继承自 <code>:number</code> 类型，它由 Suchjs 提供的 api <code>Such.define</code> 来定义，定义的方式形如，<code>Such.define(&quot;integer&quot;, &quot;number&quot;, &quot;%d&quot;)</code>，相当于在 number 类型的基础上固定了格式化属性参数。</p>',3),j={id:"int",tabindex:"-1"},S=(0,e.Wm)("a",{class:"header-anchor",href:"#int","aria-hidden":"true"},"#",-1),U=(0,e.Uk)(),E=(0,e.Wm)("code",null,":int",-1),$=(0,e.Uk)(),w=(0,e.uE)('<p><code>:int</code> 类型是 <code>:integer</code> 的简写别名。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Such<span class="token punctuation">.</span><span class="token function">as</span><span class="token punctuation">(</span><span class="token string">&quot;:int:[100,200]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 125</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',2),_={id:"percent",tabindex:"-1"},A=(0,e.Wm)("a",{class:"header-anchor",href:"#percent","aria-hidden":"true"},"#",-1),D=(0,e.Uk)(),N=(0,e.Wm)("code",null,":percent",-1),y=(0,e.Uk)(),B=(0,e.uE)('<p>返回一个不带小数点的百分值，它的定义方式为 <code>Such.define(&#39;percent&#39;, &#39;number&#39;, &#39;[1,100]:%d%&#39;)</code>，表示数字的范围在 1 到 100，同时格式化为整数后加 <code>%</code> 符号的形式。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Such<span class="token punctuation">.</span><span class="token function">as</span><span class="token punctuation">(</span><span class="token string">&quot;:percent&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;72%&#39;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="字符串类型" tabindex="-1"><a class="header-anchor" href="#字符串类型" aria-hidden="true">#</a> 字符串类型</h2><h3 id="alphanumericdash" tabindex="-1"><a class="header-anchor" href="#alphanumericdash" aria-hidden="true">#</a> <code>:alphaNumericDash</code></h3><p>返回一个由阿拉伯数字、英文字母和下划线组成的字符串，它的定义方式为 <code>Such.define(&#39;alphaNumericDash&#39;, &#39;string&#39;, &#39;[48-57,97-122,65-90,95]&#39;)</code>，相当于在 string 字符串类型的基础上限制了 unicode 的码点范围数字、小写字母、大写字母、下划线_，它等价于正则表达式的 <code>\\w</code> 字符集。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Such<span class="token punctuation">.</span><span class="token function">as</span><span class="token punctuation">(</span><span class="token string">&quot;:alphaNumericDash&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;A9dkI_1&#39;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',6),C={id:"alphanumeric",tabindex:"-1"},z=(0,e.Wm)("a",{class:"header-anchor",href:"#alphanumeric","aria-hidden":"true"},"#",-1),I=(0,e.Uk)(),L=(0,e.Wm)("code",null,":alphaNumeric",-1),P=(0,e.Uk)(),T=(0,e.uE)('<p>返回一个由字母、阿拉伯数字组成的字符串。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Such<span class="token punctuation">.</span><span class="token function">as</span><span class="token punctuation">(</span><span class="token string">&quot;:alphaNumeric&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;2aD3z&#39;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',2),G={id:"alpha",tabindex:"-1"},H=(0,e.Wm)("a",{class:"header-anchor",href:"#alpha","aria-hidden":"true"},"#",-1),R=(0,e.Uk)(),Y=(0,e.Wm)("code",null,":alpha",-1),F=(0,e.Uk)(),J=(0,e.uE)('<p>返回一个由英文字母组成的字符串。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Such<span class="token punctuation">.</span><span class="token function">as</span><span class="token punctuation">(</span><span class="token string">&quot;:alpha&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;ApkDi&#39;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',2),K={id:"numeric",tabindex:"-1"},M=(0,e.Wm)("a",{class:"header-anchor",href:"#numeric","aria-hidden":"true"},"#",-1),O=(0,e.Uk)(),Q=(0,e.Wm)("code",null,":numeric",-1),V=(0,e.Uk)(),X=(0,e.uE)('<p>返回一个由阿拉伯数字组成的字符串。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Such<span class="token punctuation">.</span><span class="token function">as</span><span class="token punctuation">(</span><span class="token string">&quot;:numeric&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;39011&#39;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',2),Z={id:"uppercase",tabindex:"-1"},nn=(0,e.Wm)("a",{class:"header-anchor",href:"#uppercase","aria-hidden":"true"},"#",-1),an=(0,e.Uk)(),sn=(0,e.Wm)("code",null,":uppercase",-1),en=(0,e.Uk)(),tn=(0,e.uE)('<p>返回一个大写字母字符串，它的定义方式为 <code>Such.define(&#39;uppercase&#39;, &#39;string&#39;, &#39;[65,90]&#39;)</code>，相当于在 string 字符串类型的基础上限制了 unicode 的码点范围为 65 到 90，也即大写字母。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Such<span class="token punctuation">.</span><span class="token function">as</span><span class="token punctuation">(</span><span class="token string">&quot;:uppercase&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;IGSDLD&#39;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',2),cn={id:"lowercase",tabindex:"-1"},pn=(0,e.Wm)("a",{class:"header-anchor",href:"#lowercase","aria-hidden":"true"},"#",-1),on=(0,e.Uk)(),ln=(0,e.Wm)("code",null,":lowercase",-1),un=(0,e.Uk)(),rn=(0,e.uE)('<p>返回一个小写字母字符串，它的定义方式为 <code>Such.define(&#39;lowercase&#39;, &#39;string&#39;, &#39;[97,122]&#39;)</code>，相当于在 string 字符串类型的基础上限制了 unicode 的码点范围为 97 到 122，也即小写字母。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Such<span class="token punctuation">.</span><span class="token function">as</span><span class="token punctuation">(</span><span class="token string">&quot;:lowercase&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// &#39;augdkoa&#39;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="网络类型" tabindex="-1"><a class="header-anchor" href="#网络类型" aria-hidden="true">#</a> 网络类型</h2>',3),dn={id:"url",tabindex:"-1"},mn=(0,e.Wm)("a",{class:"header-anchor",href:"#url","aria-hidden":"true"},"#",-1),kn=(0,e.Uk)(),hn=(0,e.Wm)("code",null,":url",-1),gn=(0,e.Uk)(),bn=(0,e.uE)('<p>返回一个 url 地址，它继承自 <code>:regexp</code>，在它的基础上固定了匹配的正则表达式。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Such<span class="token punctuation">.</span><span class="token function">as</span><span class="token punctuation">(</span><span class="token string">&quot;:url&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// 输出类似：&#39;https://x93m.cn/AD.htm?mn_u=kji&amp;7__b_=%EA%BA#_===_v__&#39;</span>\n<span class="token comment">// 如果想要控制精确的 url 值，可以增加针对分组的精确配置参数</span>\n<span class="token comment">// 更多的命名分组，可以查看extends/recommend.ts里 url 类型的定义</span>\nSuch<span class="token punctuation">.</span><span class="token function">as</span><span class="token punctuation">(</span><span class="token string">&#39;:url:#[protocol=&quot;https&quot;,tld=&quot;com&quot;]&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>',2),vn={id:"email",tabindex:"-1"},qn=(0,e.Wm)("a",{class:"header-anchor",href:"#email","aria-hidden":"true"},"#",-1),xn=(0,e.Uk)(),Wn=(0,e.Wm)("code",null,":email",-1),fn=(0,e.Uk)(),jn=(0,e.uE)('<p>返回一个邮件地址，它同样继承自 <code>:regexp</code>。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Such<span class="token punctuation">.</span><span class="token function">as</span><span class="token punctuation">(</span><span class="token string">&quot;:email&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 生成类似：&#39;3yh_meqy@o6tw1.com&#39;</span>\nSuch<span class="token punctuation">.</span><span class="token function">as</span><span class="token punctuation">(</span><span class="token string">&#39;:email:#[domain=&quot;gmail.com&quot;]&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 生成类似： `7z4@gmail.com`</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>',2),Sn={id:"protocol",tabindex:"-1"},Un=(0,e.Wm)("a",{class:"header-anchor",href:"#protocol","aria-hidden":"true"},"#",-1),En=(0,e.Uk)(),$n=(0,e.Wm)("code",null,":protocol",-1),wn=(0,e.Uk)(),_n=(0,e.uE)('<p>返回一个协议头，如 <code>https</code> <code>ftp</code>等。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Such<span class="token punctuation">.</span><span class="token function">as</span><span class="token punctuation">(</span><span class="token string">&quot;:protocol&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 生成类似: &quot;telnet&quot;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',2),An={id:"tld",tabindex:"-1"},Dn=(0,e.Wm)("a",{class:"header-anchor",href:"#tld","aria-hidden":"true"},"#",-1),Nn=(0,e.Uk)(),yn=(0,e.Wm)("code",null,":tld",-1),Bn=(0,e.Uk)(),Cn=(0,e.uE)('<p>返回一个顶级域名地址，如 <code>.com</code> <code>.net</code>等。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Such<span class="token punctuation">.</span><span class="token function">as</span><span class="token punctuation">(</span><span class="token string">&quot;:tld&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 生成类似: &quot;.org&quot;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',2),zn={id:"domain",tabindex:"-1"},In=(0,e.Wm)("a",{class:"header-anchor",href:"#domain","aria-hidden":"true"},"#",-1),Ln=(0,e.Uk)(),Pn=(0,e.Wm)("code",null,":domain",-1),Tn=(0,e.Uk)(),Gn=(0,e.uE)('<p>返回一个域名地址，支持配置 <code>tld</code> 或者 <code>domainLabel</code> 来生成特定的顶级域或者域名标签。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Such<span class="token punctuation">.</span><span class="token function">as</span><span class="token punctuation">(</span><span class="token string">&quot;:doamin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 生成类似: &quot;a2j.org&quot;</span>\nSuch<span class="token punctuation">.</span><span class="token function">as</span><span class="token punctuation">(</span><span class="token string">&quot;:doamin#[tld=&#39;.com&#39;]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 生成类似: &quot;3cf.com&quot; &quot;ku2l.com&quot;</span>\nSuch<span class="token punctuation">.</span><span class="token function">as</span><span class="token punctuation">(</span><span class="token string">&quot;:domain#[domainLabel=&#39;google&#39;]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 生成类似: &quot;google.com&quot; &quot;google.net&quot;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>',2),Hn={id:"ipv4",tabindex:"-1"},Rn=(0,e.Wm)("a",{class:"header-anchor",href:"#ipv4","aria-hidden":"true"},"#",-1),Yn=(0,e.Uk)(),Fn=(0,e.Wm)("code",null,":ipv4",-1),Jn=(0,e.Uk)(),Kn=(0,e.uE)('<p>返回一个v4版本的ip地址，如 <code>255.255.230.2</code> <code>120.53.2.8</code>等，它支持三个配置，<code>min</code> 指定ip的最小值，<code>max</code> 指定ip的最大值，<code>type</code> 指定是 <code>ABCDE</code> 哪类地址，它可以和 <code>min</code> 或 <code>max</code> 结合使用。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Such<span class="token punctuation">.</span><span class="token function">as</span><span class="token punctuation">(</span><span class="token string">&quot;:ipv4&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 生成类似: &quot;124.25.30.111&quot;</span>\nSuch<span class="token punctuation">.</span><span class="token function">as</span><span class="token punctuation">(</span><span class="token string">&quot;:ipv4#[min=&#39;10.120.2.5&#39;,max=&#39;10.120.2.7&#39;]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 生成类似 &quot;10.120.2.5&quot; &quot;10.120.2.6&quot; &quot;10.120.2.7&quot;</span>\nSuch<span class="token punctuation">.</span><span class="token function">as</span><span class="token punctuation">(</span><span class="token string">&quot;:ipv4#[type=&#39;A&#39;]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 生成类似: &quot;127.2.2.1&quot; 等</span>\nSuch<span class="token punctuation">.</span><span class="token function">as</span><span class="token punctuation">(</span><span class="token string">&quot;:ipv4#[type=&#39;A&#39;,max=&#39;127.0.0.0&#39;]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 生成类似: &quot;11.252.10.11&quot;等</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div>',2),Mn={id:"ipv6",tabindex:"-1"},On=(0,e.Wm)("a",{class:"header-anchor",href:"#ipv6","aria-hidden":"true"},"#",-1),Qn=(0,e.Uk)(),Vn=(0,e.Wm)("code",null,":ipv6",-1),Xn=(0,e.Uk)(),Zn=(0,e.uE)('<p>返回一个v6版本的ip地址，它支持一个参数，<code>compress</code> 为0到1之间的值，指定可能压缩的程度，0表示完全不压缩，1表示完全压缩。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Such<span class="token punctuation">.</span><span class="token function">as</span><span class="token punctuation">(</span><span class="token string">&quot;:ipv6&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 生成类似: &quot;abcd:ef01:2345:6789:abcd:ef01:2345:6789&quot;</span>\nSuch<span class="token punctuation">.</span><span class="token function">as</span><span class="token punctuation">(</span><span class="token string">&quot;:ipv6#[compress=0.5]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 生成类似： &quot;abcd::ef01:0:0:3cf&quot; </span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>',2),na={id:"ip",tabindex:"-1"},aa=(0,e.Wm)("a",{class:"header-anchor",href:"#ip","aria-hidden":"true"},"#",-1),sa=(0,e.Uk)(),ea=(0,e.Wm)("code",null,":ip",-1),ta=(0,e.Uk)(),ca=(0,e.uE)('<p>返回一个ip地址，它可以指定一个 <code>v6</code> 参数，表示为ipv6地址，否则为ipv4，对应的其它参数可见上面的ipv4及ipv6配置。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Such<span class="token punctuation">.</span><span class="token function">as</span><span class="token punctuation">(</span><span class="token string">&quot;:ip&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 生成类似: &quot;192.10.25.37&quot;</span>\nSuch<span class="token punctuation">.</span><span class="token function">as</span><span class="token punctuation">(</span><span class="token string">&quot;:ip#[v6]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 生成类似： &quot;abcd:ef01:2345:6789:abcd:ef01:2345:6789&quot; </span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="颜色类型" tabindex="-1"><a class="header-anchor" href="#颜色类型" aria-hidden="true">#</a> 颜色类型</h2>',3),pa={id:"color-hex",tabindex:"-1"},oa=(0,e.Wm)("a",{class:"header-anchor",href:"#color-hex","aria-hidden":"true"},"#",-1),la=(0,e.Uk)(),ua=(0,e.Wm)("code",null,":color$hex",-1),ia=(0,e.Uk)(),ra=(0,e.uE)('<p>返回一个16进制的颜色值，支持两个参数配置，<code>lowercase</code>，为<code>true</code>时生成的颜色值为小写，否则为大写。<code>argb</code>，为<code>true</code>时，返回8位的<code>argb</code>格式颜色值，否则为<code>rgb</code>格式的6位颜色值。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Such<span class="token punctuation">.</span><span class="token function">as</span><span class="token punctuation">(</span><span class="token string">&quot;:color$hex&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 生成类似：&#39;#B22AB0&#39;</span>\nSuch<span class="token punctuation">.</span><span class="token function">as</span><span class="token punctuation">(</span><span class="token string">&#39;:color$hex:#[lowcase=true,argb=true]&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 生成类似： `#92131a73`</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>',2),da={id:"color-rgb",tabindex:"-1"},ma=(0,e.Wm)("a",{class:"header-anchor",href:"#color-rgb","aria-hidden":"true"},"#",-1),ka=(0,e.Uk)(),ha=(0,e.Wm)("code",null,":color$rgb",-1),ga=(0,e.Uk)(),ba=(0,e.uE)('<p>返回一个rgb颜色值。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Such<span class="token punctuation">.</span><span class="token function">as</span><span class="token punctuation">(</span><span class="token string">&quot;:color$rgb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 生成类似：&#39;rgb(255,0,122)&#39;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',2),va={id:"color-rgba",tabindex:"-1"},qa=(0,e.Wm)("a",{class:"header-anchor",href:"#color-rgba","aria-hidden":"true"},"#",-1),xa=(0,e.Uk)(),Wa=(0,e.Wm)("code",null,":color$rgba",-1),fa=(0,e.Uk)(),ja=(0,e.uE)('<p>返回一个rgba颜色值。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Such<span class="token punctuation">.</span><span class="token function">as</span><span class="token punctuation">(</span><span class="token string">&quot;:color$rgba&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 生成类似：&#39;rgba(255,0,122,0.25)&#39;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',2),Sa={id:"color-hsl",tabindex:"-1"},Ua=(0,e.Wm)("a",{class:"header-anchor",href:"#color-hsl","aria-hidden":"true"},"#",-1),Ea=(0,e.Uk)(),$a=(0,e.Wm)("code",null,":color$hsl",-1),wa=(0,e.Uk)(),_a=(0,e.uE)('<p>返回一个hsl颜色值。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Such<span class="token punctuation">.</span><span class="token function">as</span><span class="token punctuation">(</span><span class="token string">&quot;:color$hsl&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 生成类似：&#39;hsl(240,30%,60%)&#39;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',2),Aa={id:"color-hsla",tabindex:"-1"},Da=(0,e.Wm)("a",{class:"header-anchor",href:"#color-hsla","aria-hidden":"true"},"#",-1),Na=(0,e.Uk)(),ya=(0,e.Wm)("code",null,":color$hsla",-1),Ba=(0,e.Uk)(),Ca=(0,e.uE)('<p>返回一个hsla颜色值。</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Such<span class="token punctuation">.</span><span class="token function">as</span><span class="token punctuation">(</span><span class="token string">&quot;:color$hsla&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 生成类似：&#39;hsl(240,30%,60%,0.55)&#39;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>因为 Suchjs 本身具备较好的扩展性，所以内置类型的嵌入主要以常用的一些类型为主，后续可能会继续加入更多类型，更多特定的类型请通过 API 以配置文件的方式，借助<code>Such.config</code>来实现。</p>',3),za={render:function(n,a){const s=(0,e.up)("Badge");return(0,e.wg)(),(0,e.j4)(e.HY,null,[t,(0,e.Wm)("h3",c,[p,o,l,u,(0,e.Wm)(s,{text:">= 1.0.0"})]),i,(0,e.Wm)("h3",r,[d,m,k,h,(0,e.Wm)(s,{text:">= 1.0.0"})]),g,(0,e.Wm)("h3",b,[v,q,x,W,(0,e.Wm)(s,{text:">= 1.0.0"})]),f,(0,e.Wm)("h3",j,[S,U,E,$,(0,e.Wm)(s,{text:">= 1.0.0"})]),w,(0,e.Wm)("h3",_,[A,D,N,y,(0,e.Wm)(s,{text:">= 1.0.0"})]),B,(0,e.Wm)("h3",C,[z,I,L,P,(0,e.Wm)(s,{text:">= 2.1.1"})]),T,(0,e.Wm)("h3",G,[H,R,Y,F,(0,e.Wm)(s,{text:">= 2.1.1"})]),J,(0,e.Wm)("h3",K,[M,O,Q,V,(0,e.Wm)(s,{text:">= 2.1.1"})]),X,(0,e.Wm)("h3",Z,[nn,an,sn,en,(0,e.Wm)(s,{text:">= 1.0.0"})]),tn,(0,e.Wm)("h3",cn,[pn,on,ln,un,(0,e.Wm)(s,{text:">= 1.0.0"})]),rn,(0,e.Wm)("h3",dn,[mn,kn,hn,gn,(0,e.Wm)(s,{text:">= 1.0.0"})]),bn,(0,e.Wm)("h3",vn,[qn,xn,Wn,fn,(0,e.Wm)(s,{text:">= 1.0.0"})]),jn,(0,e.Wm)("h3",Sn,[Un,En,$n,wn,(0,e.Wm)(s,{text:">= 2.1.1"})]),_n,(0,e.Wm)("h3",An,[Dn,Nn,yn,Bn,(0,e.Wm)(s,{text:">= 2.1.1"})]),Cn,(0,e.Wm)("h3",zn,[In,Ln,Pn,Tn,(0,e.Wm)(s,{text:">= 2.1.1"})]),Gn,(0,e.Wm)("h3",Hn,[Rn,Yn,Fn,Jn,(0,e.Wm)(s,{text:">= 2.1.1"})]),Kn,(0,e.Wm)("h3",Mn,[On,Qn,Vn,Xn,(0,e.Wm)(s,{text:">= 2.1.1"})]),Zn,(0,e.Wm)("h3",na,[aa,sa,ea,ta,(0,e.Wm)(s,{text:">= 2.1.1"})]),ca,(0,e.Wm)("h3",pa,[oa,la,ua,ia,(0,e.Wm)(s,{text:">= 1.0.0"})]),ra,(0,e.Wm)("h3",da,[ma,ka,ha,ga,(0,e.Wm)(s,{text:">= 1.0.0"})]),ba,(0,e.Wm)("h3",va,[qa,xa,Wa,fa,(0,e.Wm)(s,{text:">= 1.0.0"})]),ja,(0,e.Wm)("h3",Sa,[Ua,Ea,$a,wa,(0,e.Wm)(s,{text:">= 1.0.0"})]),_a,(0,e.Wm)("h3",Aa,[Da,Na,ya,Ba,(0,e.Wm)(s,{text:">= 1.0.0"})]),Ca],64)}}}}]);
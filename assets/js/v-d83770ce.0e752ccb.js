"use strict";(self.webpackChunksuchjs_com=self.webpackChunksuchjs_com||[]).push([[464],{6695:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-d83770ce",path:"/types/increment.html",title:":increment",lang:"zh-CN",frontmatter:{lang:"zh-CN",title:":increment",description:"suchjs内置类型increment"},excerpt:"",headers:[],filePathRelative:"types/increment.md",git:{contributors:[]}}},2167:(n,s,a)=>{a.r(s),a.d(s,{default:()=>l});var t=a(6252);const e={id:"increment-类型说明",tabindex:"-1"},p=(0,t.Wm)("a",{class:"header-anchor",href:"#increment-类型说明","aria-hidden":"true"},"#",-1),c=(0,t.Uk)(" increment 类型说明 "),o=(0,t.uE)('<p><code>:increment</code> 类型可以用来模拟数据库的自增id等，在配置了长度个数参数属性后，也可以用来模拟一个 <code>range</code> 范围数组。</p><ul><li><code>#[start=1, step=2]</code> 配置开始值和步阶。</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// increment的配置有两个参数</span>\n<span class="token comment">// start: 表示初始值，默认为1</span>\n<span class="token comment">// step: 表示递增的步阶，默认为1</span>\n<span class="token comment">// 表示值从0开始，步阶为2</span>\n<span class="token keyword">const</span> instance <span class="token operator">=</span> Such<span class="token punctuation">.</span><span class="token function">instance</span><span class="token punctuation">(</span><span class="token string">&quot;:increment:#[start=0,step=2]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> \ninstance<span class="token punctuation">.</span><span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// `0`</span>\ninstance<span class="token punctuation">.</span><span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// `2` </span>\ninstance<span class="token punctuation">.</span><span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// `4`</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><ul><li><code>{min[,max]}</code> 设置自增数字的个数，这时返回的数据是多个自增数字的range范围数组。</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 返回多个自增数字的数组</span>\n<span class="token keyword">const</span> instance <span class="token operator">=</span> Such<span class="token punctuation">.</span><span class="token function">instance</span><span class="token punctuation">(</span><span class="token string">&quot;:increment:{3}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\ninstance<span class="token punctuation">.</span><span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [1, 2, 3]</span>\ninstance<span class="token punctuation">.</span><span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [4, 5, 6] </span>\ninstance<span class="token punctuation">.</span><span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [7, 8, 9]</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div>',5),l={render:function(n,s){const a=(0,t.up)("Badge");return(0,t.wg)(),(0,t.j4)(t.HY,null,[(0,t.Wm)("h4",e,[p,c,(0,t.Wm)(a,{text:">= 1.0.0"})]),o],64)}}}}]);
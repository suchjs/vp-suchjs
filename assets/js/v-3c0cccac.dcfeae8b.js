"use strict";(self.webpackChunksuchjs_com=self.webpackChunksuchjs_com||[]).push([[539],{1931:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-3c0cccac",path:"/types/cascader.html",title:":cascader",lang:"zh-CN",frontmatter:{lang:"zh-CN",title:":cascader",description:"suchjs内置类型cascader"},excerpt:"",headers:[],filePathRelative:"types/cascader.md",git:{contributors:[]}}},8744:(n,s,a)=>{a.r(s),a.d(s,{default:()=>l});var p=a(6252);const t={id:"cascader-类型说明",tabindex:"-1"},e=(0,p.Wm)("a",{class:"header-anchor",href:"#cascader-类型说明","aria-hidden":"true"},"#",-1),c=(0,p.Uk)(" cascader 类型说明 "),o=(0,p.uE)('<p><code>:cascader</code> 类型用来模拟一个多级联动的数据，针对 Nodejs 环境和浏览器环境，配置上有细微差别。</p><ul><li><p>根节点书写方式</p><h5 id="针对-nodejs-环境" tabindex="-1"><a class="header-anchor" href="#针对-nodejs-环境" aria-hidden="true">#</a> 针对 Nodejs 环境</h5><p><code>:cascader:&amp;&lt;dataDir&gt;/cascader.json:#[root=true]</code></p><ul><li><p><code>&amp;</code> 路径数据属性配置，后接需要指向的联动数据</p></li><li><p><code>#[]</code> 配置参数数据属性，包含两个参数</p><ul><li><p><code>root</code> 必选，需要标记为 true。</p></li><li><p><code>handle</code> 可选，处理级联的函数句柄，函数包含两个参数，第一个参数为从路径获取到的联动数据，第二个参数为已经获取到的从第一层到当前层的数据数组。如不提供，Suchjs 默认提供了一个处理对象形式数据的处理函数。可以参见源代码里的 src/helpers/utils.ts</p></li></ul></li></ul><h5 id="针对浏览器环境" tabindex="-1"><a class="header-anchor" href="#针对浏览器环境" aria-hidden="true">#</a> 针对浏览器环境</h5><p><code>:cascader:#[root=true,data=xxx]</code> 注：从v2.1.7后，<code>root</code> 配置参数不再必须，更加简洁。</p><p>和 Nodejs 环境不一样，浏览器下需要和 dict 词典一样主动注入一个 data 参数数据，以替代 Nodejs 环境下通过文件路径获取数据的形式。</p><ul><li><code>#[]</code> 配置参数数据属性，和 Nodejs 环境一样，但多增加了一个 data 参数配置。</li></ul></li><li><p>联动子节点书写方式</p><p>联动子节点的书写方式在 Nodejs 环境和浏览器端没有什么差别，它们都只需要像 <code>:ref</code> 类型一样，提供一个路径引用。</p><ul><li><code>&amp;</code> 路径数据属性，后接一个上一级数据的字段。</li></ul></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 联动菜单json数据，在 Nodejs 下提供结构类似浏览器示例下的city变量的json文件</span>\n<span class="token comment">// Nodejs 环境</span>\n<span class="token keyword">const</span> instance <span class="token operator">=</span> Such<span class="token punctuation">.</span><span class="token function">instance</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  province<span class="token operator">:</span> <span class="token string">&quot;:cascader:&amp;&lt;dataDir&gt;/city.json:#[root=true]&quot;</span><span class="token punctuation">,</span>\n  city<span class="token operator">:</span> <span class="token string">&quot;:cascader:&amp;./province&quot;</span><span class="token punctuation">,</span>\n  area<span class="token operator">:</span> <span class="token string">&quot;:cascader:&amp;./city&quot;</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// 浏览器下</span>\n<span class="token keyword">const</span> city <span class="token operator">=</span> <span class="token punctuation">{</span>\n  北京市<span class="token operator">:</span> <span class="token punctuation">{</span>\n    北京市<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;朝阳区&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;海淀区&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  湖北省<span class="token operator">:</span> <span class="token punctuation">{</span>\n    武汉市<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;洪湖区&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;东西湖区&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\nSuch<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token string">&#39;city&#39;</span><span class="token punctuation">,</span> city<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> instance <span class="token operator">=</span> Such<span class="token punctuation">.</span><span class="token function">instance</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  province<span class="token operator">:</span> <span class="token string">&quot;:cascader:#[root=true,data=city]&quot;</span><span class="token punctuation">,</span>\n  city<span class="token operator">:</span> <span class="token string">&quot;:cascader:&amp;./province&quot;</span><span class="token punctuation">,</span>\n  area<span class="token operator">:</span> <span class="token string">&quot;:cascader:&amp;./city&quot;</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// 模拟数据</span>\ninstance<span class="token punctuation">.</span><span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// 输出数据类似：</span>\n<span class="token comment">/*\n{\n  province: &quot;北京市&quot;, \n  city: &quot;北京市&quot;, \n  area: &quot;朝阳区&quot;\n}\n*/</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br></div></div>',3),l={render:function(n,s){const a=(0,p.up)("Badge");return(0,p.wg)(),(0,p.j4)(p.HY,null,[(0,p.Wm)("h4",t,[e,c,(0,p.Wm)(a,{text:">= 1.0.0"})]),o],64)}}}}]);
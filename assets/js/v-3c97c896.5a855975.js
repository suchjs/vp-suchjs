"use strict";(self.webpackChunksuchjs_com=self.webpackChunksuchjs_com||[]).push([[538],{8867:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e={key:"v-3c97c896",path:"/en/types/enum.html",title:"enum",lang:"zh-CN",frontmatter:{lang:"zh-CN",title:"enum",description:"suchjs enum type"},excerpt:"",headers:[],filePathRelative:"en/types/enum.md",git:{contributors:[]}}},3744:(n,s,a)=>{a.r(s),a.d(s,{default:()=>u});var e=a(6252);const t={id:"enum-type-description",tabindex:"-1"},p=(0,e.Wm)("a",{class:"header-anchor",href:"#enum-type-description","aria-hidden":"true"},"#",-1),o=(0,e.Uk)(" Enum type description "),c=(0,e.uE)('<p>There is no real <code>:enum</code> enumeration type in Suchjs, but we can easily build one. In <code>Suchjs</code>, if the data target&#39;s field&#39;s value is an array, it will randomly select the item in the array as the generated data&#39;s array item (when the field&#39;s length is greater than 1) or value (when the field&#39;s length is 1).</p><ul><li>Usage</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// Limit the number of occurrences of the field to 1, and set the value to an array of enumerated values</span>\n<span class="token keyword">const</span> instance <span class="token operator">=</span> Such<span class="token punctuation">.</span><span class="token function">instance</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token string">&quot;enum{1}&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\ninstance<span class="token punctuation">.</span><span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// The above will output {enum: true} or {enum: false}</span>\n<span class="token comment">// The advantage of the enumeration value is that you can generate a specific enumeration value you want by set the enumeration value&#39;s index of the field in the keys of the parameter options</span>\ninstance<span class="token punctuation">.</span><span class="token function">a</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  keys<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token string">&quot;/enum&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n      index<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// The above will output: {enum: true}</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div>',3),u={render:function(n,s){const a=(0,e.up)("Badge");return(0,e.wg)(),(0,e.j4)(e.HY,null,[(0,e.Wm)("h4",t,[p,o,(0,e.Wm)(a,{text:">= 1.1.0"})]),c],64)}}}}]);
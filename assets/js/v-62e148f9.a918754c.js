"use strict";(self.webpackChunksuchjs_com=self.webpackChunksuchjs_com||[]).push([[564],{1790:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-62e148f9",path:"/types/string.html",title:":string",lang:"zh-CN",frontmatter:{lang:"zh-CN",title:":string",description:"suchjs内置类型string"},excerpt:"",headers:[],filePathRelative:"types/string.md",git:{contributors:[]}}},9296:(n,s,a)=>{a.r(s),a.d(s,{default:()=>u});var t=a(6252);const p={id:"string-类型说明",tabindex:"-1"},e=(0,t.Wm)("a",{class:"header-anchor",href:"#string-类型说明","aria-hidden":"true"},"#",-1),c=(0,t.Uk)(" string 类型说明 "),o=(0,t.uE)('<p><code>:string</code> 类型是 <code>suchjs</code> 内置的最基本类型之一，它支持以下数据属性：</p><ul><li><code>{min[,max]}</code> 长度属性，用来设置字符串的长度。</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 设置长度为3到5个字符</span>\nSuch<span class="token punctuation">.</span><span class="token function">as</span><span class="token punctuation">(</span><span class="token string">&quot;:string:{3,5}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token comment">// 设置长度为10个字符</span>\nSuch<span class="token punctuation">.</span><span class="token function">as</span><span class="token punctuation">(</span><span class="token string">&quot;:string:{10}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><ul><li><code>[]</code> 大小范围属性，用来设置 unicode 码点范围</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// 设置码点范围为65到90，也即大写字母</span>\nSuch<span class="token punctuation">.</span><span class="token function">as</span><span class="token punctuation">(</span><span class="token string">&quot;:string:[65,90]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 输出类似：&#39;XMSGDULDD&#39;</span>\n<span class="token comment">// 设置多个码点范围，65到90为大写字母，95对应英文下划线_，97到122为小写字母</span>\nSuch<span class="token punctuation">.</span><span class="token function">as</span><span class="token punctuation">(</span><span class="token string">&quot;:string:[65-90,95,97-122]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 输出类似：&#39;lDc_aKlP&#39;</span>\n<span class="token comment">// 也可以使用4位或者6位的unicode编码来直接表示码点范围</span>\nSuch<span class="token punctuation">.</span><span class="token function">as</span><span class="token punctuation">(</span><span class="token string">&quot;:string:[\\\\u0041,\\\\u005a]&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 输出类似：&#39;LIDPDKGCJE&#39;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><ul><li><code>@</code> 运用函数</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Such<span class="token punctuation">.</span><span class="token function">as</span><span class="token punctuation">(</span><span class="token string">&quot;:string:[65,90]:{3,5}:@concat(&#39;_&#39;)|repeat(3)|slice(0,-1)&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> \n<span class="token comment">// 输出类似 `TSQ_TSQ_TSQ`</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div>',7),u={render:function(n,s){const a=(0,t.up)("Badge");return(0,t.wg)(),(0,t.j4)(t.HY,null,[(0,t.Wm)("h4",p,[e,c,(0,t.Wm)(a,{text:">= 1.0.0"})]),o],64)}}}}]);